{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/gingerbreadcookies/Desktop/026_es6-spread-operator-practice/src/components/App.jsx\";\n\nimport React, { useState } from \"react\";\nimport ToDoItem from './ToDoItem';\nimport InputArea from \"./InputArea\";\n\nvar App = function App() {\n  var deleteItem = function deleteItem(id) {\n    setItems(function (prevItems) {\n      return prevItems.filter(function (items, index) {\n        return index !== id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"To-Do List\")), /*#__PURE__*/React.createElement(InputArea, {\n    onClicked: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, items.map(function (currentItem, index) {\n    return (\n      /*#__PURE__*/\n      // we used id as an index key too because props have no\n      // way of accessing \"key\" key.\n      // id will be used to delete the item.\n      // Normally the index value that is passed from map, is not suggested\n      // To be used as a value. For a real project look online for alternative\n      // solutions\n      React.createElement(ToDoItem, {\n        key: index,\n        id: index,\n        item: currentItem,\n        onChecked: deleteItem,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      })\n    );\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/gingerbreadcookies/Desktop/026_es6-spread-operator-practice/src/components/App.jsx"],"names":["React","useState","ToDoItem","InputArea","App","deleteItem","id","setItems","prevItems","filter","items","index","handleClick","map","currentItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAEhB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AACzBC,IAAAA,QAAQ,CAAC,UAAAC,SAAS,EAAI;AACpB,aAAOA,SAAS,CAACC,MAAV,CAAiB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACxC,eAAOA,KAAK,KAAKL,EAAjB;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,eAII,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEM,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAU,UAACC,WAAD,EAAcH,KAAd,EAAwB;AACjC;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA,0BAAC,QAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,EAAE,EAAEA,KAFN;AAGE,QAAA,IAAI,EAAEG,WAHR;AAIE,QAAA,SAAS,EAAET,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAcD,GAfA,CADH,CADF,CAlBF,CADF;AAyCD,CAnDD;;AAqDA,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ToDoItem from './ToDoItem';\nimport InputArea from \"./InputArea\";\n\nconst App = () => {\n\n  const deleteItem = (id) => {\n    setItems(prevItems => {\n      return prevItems.filter((items, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n        <InputArea \n          onClicked={handleClick}\n        />\n        {/* <div className=\"form\">\n          <input \n            type=\"text\" \n            placeholder='Enter New Item'\n            onChange={handleChange}\n            value={item}\n          />\n          <button onClick={handleClick}>\n            <span>Add</span>\n          </button>\n        </div> */}\n      <div>\n        <ul>\n          {items.map((currentItem, index) => {\n            return(\n              // we used id as an index key too because props have no\n              // way of accessing \"key\" key.\n              // id will be used to delete the item.\n              // Normally the index value that is passed from map, is not suggested\n              // To be used as a value. For a real project look online for alternative\n              // solutions\n              <ToDoItem \n                key={index}\n                id={index}\n                item={currentItem}\n                onChecked={deleteItem}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}