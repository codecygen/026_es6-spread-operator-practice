{"ast":null,"code":"import _slicedToArray from \"/home/gingerbreadcookies/Desktop/026_es6-spread-operator-practice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/gingerbreadcookies/Desktop/026_es6-spread-operator-practice/src/components/ToDoItem.jsx\";\n\nimport React, { useState } from 'react';\n\nvar ToDoItem = function ToDoItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDone = _useState2[0],\n      setIsDone = _useState2[1]; // prevValue is a hooks term, it takes isDone's previous value as an argument\n\n\n  var handleClick = function handleClick() {\n    setIsDone(function (prevValue) {\n      return !prevValue;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    // You can use ternary operator inside the style\n    style: {\n      textDecoration: isDone ? 'line-through' : 'none'\n    },\n    onClick: function onClick() {\n      handleClick();\n      props.onChecked();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, props.item);\n};\n\nexport default ToDoItem;","map":{"version":3,"sources":["/home/gingerbreadcookies/Desktop/026_es6-spread-operator-practice/src/components/ToDoItem.jsx"],"names":["React","useState","ToDoItem","props","isDone","setIsDone","handleClick","prevValue","textDecoration","onChecked","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAExB,kBAA8BF,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAQG,MAAR;AAAA,MAAgBC,SAAhB,iBAFwB,CAIxB;;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBD,IAAAA,SAAS,CAAC,UAAAE,SAAS,EAAI;AACnB,aAAO,CAACA,SAAR;AACH,KAFQ,CAAT;AAGH,GAJD;;AAMA,sBACI;AACI;AACA,IAAA,KAAK,EAAE;AAACC,MAAAA,cAAc,EAAEJ,MAAM,GAAG,cAAH,GAAoB;AAA3C,KAFX;AAGI,IAAA,OAAO,EAAE,mBAAM;AACXE,MAAAA,WAAW;AACXH,MAAAA,KAAK,CAACM,SAAN;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOUN,KAAK,CAACO,IAPhB,CADJ;AAWH,CAtBD;;AAwBA,eAAeR,QAAf","sourcesContent":["import React, { useState } from 'react';\n\n\n\n\nconst ToDoItem = (props) => {\n\n    const [ isDone, setIsDone ] = useState(false);\n\n    // prevValue is a hooks term, it takes isDone's previous value as an argument\n    const handleClick = () => {\n        setIsDone(prevValue => {\n            return !prevValue;\n        });\n    }\n    \n    return(\n        <li \n            // You can use ternary operator inside the style\n            style={{textDecoration: isDone ? 'line-through' : 'none'}}\n            onClick={() => {\n                handleClick();\n                props.onChecked();\n            }}\n                >{props.item}\n        </li>\n    );\n}\n\nexport default ToDoItem;"]},"metadata":{},"sourceType":"module"}